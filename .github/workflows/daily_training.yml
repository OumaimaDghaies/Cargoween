name: Daily Model Training

on:
  schedule:
    - cron: '0 0 * * *'  # Minuit UTC
  workflow_dispatch:
  
permissions:
  contents: write
  
jobs:
  train-model:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: http://34.76.105.165:5000
      MLFLOW_REGISTRY_URI: http://34.76.105.165:5000
      DB_NAME: reservation
      COLLECTION_NAME: ListTransitaire
      MODEL_VERSION: ${{ github.run_id }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install python-dotenv pymongo mlflow pymongo[srv] gitpython
        pip install google-cloud-storage  # Ajout spécifique pour Google Cloud

    - name: Configure GCloud credentials
      if: ${{ false }}  # À activer si vous utilisez l'authentification GCloud
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Run training
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}  # Si nécessaire
      run: |
        # Nettoyage préalable
        [ -f "best_model.pkl" ] && rm -f best_model.pkl
        
        # Exécution avec vérification des variables
        echo "Vérification des variables MLflow:"
        echo "MLFLOW_TRACKING_URI: $MLFLOW_TRACKING_URI"
        echo "MLFLOW_REGISTRY_URI: $MLFLOW_REGISTRY_URI"
        
        python train_model.py
        
        # Vérification finale
        if [ ! -f "best_model.pkl" ]; then
          echo "::error::Échec: Aucun modèle produit"
          exit 1
        fi
    - name: Push to GitHub
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add best_model.pkl model_backups/*
        git commit -m "Update model ${{ github.run_id }}"
        git push

    - name: Send email notification
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_SENDER }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Workflow ${{ github.workflow }} - ${{ job.status }}"
        html_body: |
          <p><strong>Statut</strong>: ${{ job.status }}</p>
          <p><strong>Dépôt</strong>: ${{ github.repository }}</p>
          <p><strong>Lien</strong>: <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">Voir le workflow</a></p>
        to: ${{ secrets.EMAIL_RECIPIENT }}
        from: GitHub Actions
        secure: true
